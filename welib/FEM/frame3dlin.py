""" 
Finate element formulation for a 3d frame with linear variation between elements

Elements are oriented along their x-axis


Inspired by a matlab implementation by J. Geilser:
    https://github.com/jgeisler0303/FEMBeam
"""
import numpy as np
import scipy

# --------------------------------------------------------------------------------}
# --- Element formulation 
# --------------------------------------------------------------------------------{
def frame3dlin_KeMe(E,G,Kv1,Kv2,A1,A2,Iy1,Iy2,Iz1,Iz2,L,me1,me2,R=None):
    r"""
    Linear frame element directed along x
    Values are given at both nodes

    INPUTS
        "1" at node 1, "2" at node 2
        E  : Young's (elastic) modulus
        Gs : Shear modulus. For an isotropic material G = E/2(nu+1) with nu the Poission's ratio
        Kv : Saint-Venant's torsion constant, Polar moment of i
        L  : Element length
        A  : Cross section area
        Ix : Polar  second moment of area,local x-axis. Ix=\iint(y^2+z^2) dy dz [m4]
        Iy : Planar second moment of area,local y-axis. Iy=\iint z^2 dy dz [m4]
        Iz : Planar second moment of area,local z-axis. Iz=\iint y^2 dy dz [m4]
    OPTIONAL INPUTS
        R   : Transformation matrix (3x3) from global coord to element coord: x_e = R.x_g
             if provided, element matrix is provided in global coord
    OUTPUTS
        ke: Element stiffness matrix (12x12)
        me: Element mass matrix (12x12)

    """
    # --- Stifness matrix
    ke = np.array([
        [((A2+A1)*E)/(2*L)  , 0                       , 0                       , 0                    , 0                       , 0                       , -((A2+A1)*E)/(2*L) , 0                       , 0                       , 0                    , 0                       , 0]                       , 
        [0                  , ((6*Iz2+6*Iz1)*E)/L**3  , 0                       , 0                    , 0                       , ((2*Iz2+4*Iz1)*E)/L**2  , 0                  , -((6*Iz2+6*Iz1)*E)/L**3 , 0                       , 0                    , 0                       , ((4*Iz2+2*Iz1)*E)/L**2]  , 
        [0                  , 0                       , ((6*Iy2+6*Iy1)*E)/L**3  , 0                    , -((2*Iy2+4*Iy1)*E)/L**2 , 0                       , 0                  , 0                       , -((6*Iy2+6*Iy1)*E)/L**3 , 0                    , -((4*Iy2+2*Iy1)*E)/L**2 , 0]                       , 
        [0                  , 0                       , 0                       , ((Kv2+Kv1)*G)/(2*L)  , 0                       , 0                       , 0                  , 0                       , 0                       , -((Kv2+Kv1)*G)/(2*L) , 0                       , 0]                       , 
        [0                  , 0                       , -((2*Iy2+4*Iy1)*E)/L**2 , 0                    , ((Iy2+3*Iy1)*E)/L       , 0                       , 0                  , 0                       , ((2*Iy2+4*Iy1)*E)/L**2  , 0                    , ((Iy2+Iy1)*E)/L         , 0]                       , 
        [0                  , ((2*Iz2+4*Iz1)*E)/L**2  , 0                       , 0                    , 0                       , ((Iz2+3*Iz1)*E)/L       , 0                  , -((2*Iz2+4*Iz1)*E)/L**2 , 0                       , 0                    , 0                       , ((Iz2+Iz1)*E)/L]         , 
        [-((A2+A1)*E)/(2*L) , 0                       , 0                       , 0                    , 0                       , 0                       , ((A2+A1)*E)/(2*L)  , 0                       , 0                       , 0                    , 0                       , 0]                       , 
        [0                  , -((6*Iz2+6*Iz1)*E)/L**3 , 0                       , 0                    , 0                       , -((2*Iz2+4*Iz1)*E)/L**2 , 0                  , ((6*Iz2+6*Iz1)*E)/L**3  , 0                       , 0                    , 0                       , -((4*Iz2+2*Iz1)*E)/L**2] , 
        [0                  , 0                       , -((6*Iy2+6*Iy1)*E)/L**3 , 0                    , ((2*Iy2+4*Iy1)*E)/L**2  , 0                       , 0                  , 0                       , ((6*Iy2+6*Iy1)*E)/L**3  , 0                    , ((4*Iy2+2*Iy1)*E)/L**2  , 0]                       , 
        [0                  , 0                       , 0                       , -((Kv2+Kv1)*G)/(2*L) , 0                       , 0                       , 0                  , 0                       , 0                       , ((Kv2+Kv1)*G)/(2*L)  , 0                       , 0]                       , 
        [0                  , 0                       , -((4*Iy2+2*Iy1)*E)/L**2 , 0                    , ((Iy2+Iy1)*E)/L         , 0                       , 0                  , 0                       , ((4*Iy2+2*Iy1)*E)/L**2  , 0                    , ((3*Iy2+Iy1)*E)/L       , 0]                       , 
        [0                  , ((4*Iz2+2*Iz1)*E)/L**2  , 0                       , 0                    , 0                       , ((Iz2+Iz1)*E)/L         , 0                  , -((4*Iz2+2*Iz1)*E)/L**2 , 0                       , 0                    , 0                       , ((3*Iz2+Iz1)*E)/L]
        ])
    # --- Mass matrix
    me = np.array([
        [(me2+3*me1)/12 , 0                      , 0                       , 0              , 0                           , 0                           , (me2+me1)/12   , 0                       , 0                      , 0              , 0                           , 0]                           , 
        [0              , (3*me2+10*me1)/35      , 0                       , 0              , 0                           , (7*L*me2+15*L*me1)/420      , 0              , (9*me2+9*me1)/140       , 0                      , 0              , 0                           , -(6*L*me2+7*L*me1)/420]      , 
        [0              , 0                      , (3*me2+10*me1)/35       , 0              , -(7*L*me2+15*L*me1)/420     , 0                           , 0              , 0                       , (9*me2+9*me1)/140      , 0              , (6*L*me2+7*L*me1)/420       , 0]                           , 
        [0              , 0                      , 0                       , (me2+3*me1)/12 , 0                           , 0                           , 0              , 0                       , 0                      , (me2+me1)/12   , 0                           , 0]                           , 
        [0              , 0                      , -(7*L*me2+15*L*me1)/420 , 0              , (3*L**2*me2+5*L**2*me1)/840 , 0                           , 0              , 0                       , -(7*L*me2+6*L*me1)/420 , 0              , -(L**2*me2+L**2*me1)/280    , 0]                           , 
        [0              , (7*L*me2+15*L*me1)/420 , 0                       , 0              , 0                           , (3*L**2*me2+5*L**2*me1)/840 , 0              , (7*L*me2+6*L*me1)/420   , 0                      , 0              , 0                           , -(L**2*me2+L**2*me1)/280]    , 
        [(me2+me1)/12   , 0                      , 0                       , 0              , 0                           , 0                           , (3*me2+me1)/12 , 0                       , 0                      , 0              , 0                           , 0]                           , 
        [0              , (9*me2+9*me1)/140      , 0                       , 0              , 0                           , (7*L*me2+6*L*me1)/420       , 0              , (10*me2+3*me1)/35       , 0                      , 0              , 0                           , -(15*L*me2+7*L*me1)/420]     , 
        [0              , 0                      , (9*me2+9*me1)/140       , 0              , -(7*L*me2+6*L*me1)/420      , 0                           , 0              , 0                       , (10*me2+3*me1)/35      , 0              , (15*L*me2+7*L*me1)/420      , 0]                           , 
        [0              , 0                      , 0                       , (me2+me1)/12   , 0                           , 0                           , 0              , 0                       , 0                      , (3*me2+me1)/12 , 0                           , 0]                           , 
        [0              , 0                      , (6*L*me2+7*L*me1)/420   , 0              , -(L**2*me2+L**2*me1)/280    , 0                           , 0              , 0                       , (15*L*me2+7*L*me1)/420 , 0              , (5*L**2*me2+3*L**2*me1)/840 , 0]                           , 
        [0              , -(6*L*me2+7*L*me1)/420 , 0                       , 0              , 0                           , -(L**2*me2+L**2*me1)/280    , 0              , -(15*L*me2+7*L*me1)/420 , 0                      , 0              , 0                           , (5*L**2*me2+3*L**2*me1)/840]
        ])

    if (R is not None):
        RR = scipy.linalg.block_diag(R,R,R,R)
        me = np.transpose(RR).dot(me.dot(RR))
        ke = np.transpose(RR).dot(ke.dot(RR))

    return ke, me


def frame3dlin_Kg(E,A1,A2,L,Te1,Te2,R=None):
    """ 
    Geometrical stiffness due to axial load T1 and T2 at nodes extremities for a linear 3D frame element
    Te1 and Te2 and expressed in the element frame
    """
    Kge1= np.array([
            [0 , 0                         , 0                         , 0 , 0                 , 0                 , 0 , 0                         , 0                         , 0 , 0                 , 0],
            [0 , -((3*A2+3*A1)*E)/(5*L**2) , 0                         , 0 , 0                 , -(A2*E)/(10*L)    , 0 , ((3*A2+3*A1)*E)/(5*L**2)  , 0                         , 0 , 0                 , -(A1*E)/(10*L)],
            [0 , 0                         , -((3*A2+3*A1)*E)/(5*L**2) , 0 , (A2*E)/(10*L)     , 0                 , 0 , 0                         , ((3*A2+3*A1)*E)/(5*L**2)  , 0 , (A1*E)/(10*L)     , 0],
            [0 , 0                         , 0                         , 0 , 0                 , 0                 , 0 , 0                         , 0                         , 0 , 0                 , 0],
            [0 , 0                         , (A2*E)/(10*L)             , 0 , -((A2+3*A1)*E)/30 , 0                 , 0 , 0                         , -(A2*E)/(10*L)            , 0 , ((A2+A1)*E)/60    , 0],
            [0 , -(A2*E)/(10*L)            , 0                         , 0 , 0                 , -((A2+3*A1)*E)/30 , 0 , (A2*E)/(10*L)             , 0                         , 0 , 0                 , ((A2+A1)*E)/60],
            [0 , 0                         , 0                         , 0 , 0                 , 0                 , 0 , 0                         , 0                         , 0 , 0                 , 0],
            [0 , ((3*A2+3*A1)*E)/(5*L**2)  , 0                         , 0 , 0                 , (A2*E)/(10*L)     , 0 , -((3*A2+3*A1)*E)/(5*L**2) , 0                         , 0 , 0                 , (A1*E)/(10*L)],
            [0 , 0                         , ((3*A2+3*A1)*E)/(5*L**2)  , 0 , -(A2*E)/(10*L)    , 0                 , 0 , 0                         , -((3*A2+3*A1)*E)/(5*L**2) , 0 , -(A1*E)/(10*L)    , 0],
            [0 , 0                         , 0                         , 0 , 0                 , 0                 , 0 , 0                         , 0                         , 0 , 0                 , 0],
            [0 , 0                         , (A1*E)/(10*L)             , 0 , ((A2+A1)*E)/60    , 0                 , 0 , 0                         , -(A1*E)/(10*L)            , 0 , -((3*A2+A1)*E)/30 , 0],
            [0 , -(A1*E)/(10*L)            , 0                         , 0 , 0                 , ((A2+A1)*E)/60    , 0 , (A1*E)/(10*L)             , 0                         , 0 , 0                 , -((3*A2+A1)*E)/30]
            ])
    Kge2= np.array([
            [0 , 0                         , 0                         , 0 , 0                , 0                , 0 , 0                         , 0                         , 0 , 0                , 0],
            [0 , ((3*A2+3*A1)*E)/(5*L**2)  , 0                         , 0 , 0                , (A2*E)/(10*L)    , 0 , -((3*A2+3*A1)*E)/(5*L**2) , 0                         , 0 , 0                , (A1*E)/(10*L)],
            [0 , 0                         , ((3*A2+3*A1)*E)/(5*L**2)  , 0 , -(A2*E)/(10*L)   , 0                , 0 , 0                         , -((3*A2+3*A1)*E)/(5*L**2) , 0 , -(A1*E)/(10*L)   , 0],
            [0 , 0                         , 0                         , 0 , 0                , 0                , 0 , 0                         , 0                         , 0 , 0                , 0],
            [0 , 0                         , -(A2*E)/(10*L)            , 0 , ((A2+3*A1)*E)/30 , 0                , 0 , 0                         , (A2*E)/(10*L)             , 0 , -((A2+A1)*E)/60  , 0],
            [0 , (A2*E)/(10*L)             , 0                         , 0 , 0                , ((A2+3*A1)*E)/30 , 0 , -(A2*E)/(10*L)            , 0                         , 0 , 0                , -((A2+A1)*E)/60],
            [0 , 0                         , 0                         , 0 , 0                , 0                , 0 , 0                         , 0                         , 0 , 0                , 0],
            [0 , -((3*A2+3*A1)*E)/(5*L**2) , 0                         , 0 , 0                , -(A2*E)/(10*L)   , 0 , ((3*A2+3*A1)*E)/(5*L**2)  , 0                         , 0 , 0                , -(A1*E)/(10*L)],
            [0 , 0                         , -((3*A2+3*A1)*E)/(5*L**2) , 0 , (A2*E)/(10*L)    , 0                , 0 , 0                         , ((3*A2+3*A1)*E)/(5*L**2)  , 0 , (A1*E)/(10*L)    , 0],
            [0 , 0                         , 0                         , 0 , 0                , 0                , 0 , 0                         , 0                         , 0 , 0                , 0],
            [0 , 0                         , -(A1*E)/(10*L)            , 0 , -((A2+A1)*E)/60  , 0                , 0 , 0                         , (A1*E)/(10*L)             , 0 , ((3*A2+A1)*E)/30 , 0],
            [0 , (A1*E)/(10*L)             , 0                         , 0 , 0                , -((A2+A1)*E)/60  , 0 , -(A1*E)/(10*L)            , 0                         , 0 , 0                , ((3*A2+A1)*E)/30]])

    Kg = Kge1*Te1 + Kge2*Te2

    if (R is not None):
        RR = scipy.linalg.block_diag(R,R,R,R)
        Kg = np.transpose(RR).dot(Kg.dot(RR))

    return Kg


def frame3dlin_Mcross(L,me1,me2,R=None):
        """
        Cross products of shape functions
        

        
        """
        # --- C3 See eq 5.248 p232, chap5
        C3=np.zeros((3,3,12,12))
        C3[0,0] = np.array([
                           [(me2+3*me1)/12 , 0 , 0 , 0 , 0 , 0 , (me2+me1)/12   , 0 , 0 , 0 , 0 , 0]   , 
                           [0              , 0 , 0 , 0 , 0 , 0 , 0              , 0 , 0 , 0 , 0 , 0]   , 
                           [0              , 0 , 0 , 0 , 0 , 0 , 0              , 0 , 0 , 0 , 0 , 0]   , 
                           [0              , 0 , 0 , 0 , 0 , 0 , 0              , 0 , 0 , 0 , 0 , 0]   , 
                           [0              , 0 , 0 , 0 , 0 , 0 , 0              , 0 , 0 , 0 , 0 , 0]   , 
                           [0              , 0 , 0 , 0 , 0 , 0 , 0              , 0 , 0 , 0 , 0 , 0]   , 
                           [(me2+me1)/12   , 0 , 0 , 0 , 0 , 0 , (3*me2+me1)/12 , 0 , 0 , 0 , 0 , 0]   , 
                           [0              , 0 , 0 , 0 , 0 , 0 , 0              , 0 , 0 , 0 , 0 , 0]   , 
                           [0              , 0 , 0 , 0 , 0 , 0 , 0              , 0 , 0 , 0 , 0 , 0]   , 
                           [0              , 0 , 0 , 0 , 0 , 0 , 0              , 0 , 0 , 0 , 0 , 0]   , 
                           [0              , 0 , 0 , 0 , 0 , 0 , 0              , 0 , 0 , 0 , 0 , 0]   , 
                           [0              , 0 , 0 , 0 , 0 , 0 , 0              , 0 , 0 , 0 , 0 , 0]])
        C3[0,1] = np.array([
                           [0 , (5*me2+16*me1)/60 , 0 , 0 , 0 , (L*me2+2*L*me1)/60 , 0 , (5*me2+4*me1)/60  , 0 , 0 , 0 , -(L*me2+L*me1)/60]   , 
                           [0 , 0                 , 0 , 0 , 0 , 0                  , 0 , 0                 , 0 , 0 , 0 , 0]                   , 
                           [0 , 0                 , 0 , 0 , 0 , 0                  , 0 , 0                 , 0 , 0 , 0 , 0]                   , 
                           [0 , 0                 , 0 , 0 , 0 , 0                  , 0 , 0                 , 0 , 0 , 0 , 0]                   , 
                           [0 , 0                 , 0 , 0 , 0 , 0                  , 0 , 0                 , 0 , 0 , 0 , 0]                   , 
                           [0 , 0                 , 0 , 0 , 0 , 0                  , 0 , 0                 , 0 , 0 , 0 , 0]                   , 
                           [0 , (4*me2+5*me1)/60  , 0 , 0 , 0 , (L*me2+L*me1)/60   , 0 , (16*me2+5*me1)/60 , 0 , 0 , 0 , -(2*L*me2+L*me1)/60] , 
                           [0 , 0                 , 0 , 0 , 0 , 0                  , 0 , 0                 , 0 , 0 , 0 , 0]                   , 
                           [0 , 0                 , 0 , 0 , 0 , 0                  , 0 , 0                 , 0 , 0 , 0 , 0]                   , 
                           [0 , 0                 , 0 , 0 , 0 , 0                  , 0 , 0                 , 0 , 0 , 0 , 0]                   , 
                           [0 , 0                 , 0 , 0 , 0 , 0                  , 0 , 0                 , 0 , 0 , 0 , 0]                   , 
                           [0 , 0                 , 0 , 0 , 0 , 0                  , 0 , 0                 , 0 , 0 , 0 , 0]])
        C3[0,2] = np.array([
                           [0 , 0 , (5*me2+16*me1)/60 , 0 , -(L*me2+2*L*me1)/60 , 0 , 0 , 0 , (5*me2+4*me1)/60  , 0 , (L*me2+L*me1)/60   , 0]  , 
                           [0 , 0 , 0                 , 0 , 0                   , 0 , 0 , 0 , 0                 , 0 , 0                  , 0]  , 
                           [0 , 0 , 0                 , 0 , 0                   , 0 , 0 , 0 , 0                 , 0 , 0                  , 0]  , 
                           [0 , 0 , 0                 , 0 , 0                   , 0 , 0 , 0 , 0                 , 0 , 0                  , 0]  , 
                           [0 , 0 , 0                 , 0 , 0                   , 0 , 0 , 0 , 0                 , 0 , 0                  , 0]  , 
                           [0 , 0 , 0                 , 0 , 0                   , 0 , 0 , 0 , 0                 , 0 , 0                  , 0]  , 
                           [0 , 0 , (4*me2+5*me1)/60  , 0 , -(L*me2+L*me1)/60   , 0 , 0 , 0 , (16*me2+5*me1)/60 , 0 , (2*L*me2+L*me1)/60 , 0]  , 
                           [0 , 0 , 0                 , 0 , 0                   , 0 , 0 , 0 , 0                 , 0 , 0                  , 0]  , 
                           [0 , 0 , 0                 , 0 , 0                   , 0 , 0 , 0 , 0                 , 0 , 0                  , 0]  , 
                           [0 , 0 , 0                 , 0 , 0                   , 0 , 0 , 0 , 0                 , 0 , 0                  , 0]  , 
                           [0 , 0 , 0                 , 0 , 0                   , 0 , 0 , 0 , 0                 , 0 , 0                  , 0]  , 
                           [0 , 0 , 0                 , 0 , 0                   , 0 , 0 , 0 , 0                 , 0 , 0                  , 0]])
        C3[1,0] = np.array([
                           [0                  , 0 , 0 , 0 , 0 , 0 , 0                   , 0 , 0 , 0 , 0 , 0]  , 
                           [(5*me2+16*me1)/60  , 0 , 0 , 0 , 0 , 0 , (4*me2+5*me1)/60    , 0 , 0 , 0 , 0 , 0]  , 
                           [0                  , 0 , 0 , 0 , 0 , 0 , 0                   , 0 , 0 , 0 , 0 , 0]  , 
                           [0                  , 0 , 0 , 0 , 0 , 0 , 0                   , 0 , 0 , 0 , 0 , 0]  , 
                           [0                  , 0 , 0 , 0 , 0 , 0 , 0                   , 0 , 0 , 0 , 0 , 0]  , 
                           [(L*me2+2*L*me1)/60 , 0 , 0 , 0 , 0 , 0 , (L*me2+L*me1)/60    , 0 , 0 , 0 , 0 , 0]  , 
                           [0                  , 0 , 0 , 0 , 0 , 0 , 0                   , 0 , 0 , 0 , 0 , 0]  , 
                           [(5*me2+4*me1)/60   , 0 , 0 , 0 , 0 , 0 , (16*me2+5*me1)/60   , 0 , 0 , 0 , 0 , 0]  , 
                           [0                  , 0 , 0 , 0 , 0 , 0 , 0                   , 0 , 0 , 0 , 0 , 0]  , 
                           [0                  , 0 , 0 , 0 , 0 , 0 , 0                   , 0 , 0 , 0 , 0 , 0]  , 
                           [0                  , 0 , 0 , 0 , 0 , 0 , 0                   , 0 , 0 , 0 , 0 , 0]  , 
                           [- (L*me2+L*me1)/60 , 0 , 0 , 0 , 0 , 0 , -(2*L*me2+L*me1)/60 , 0 , 0 , 0 , 0 , 0]])
        C3[1,1] = np.array([
                           [0 , 0                      , 0 , 0 , 0 , 0                           , 0 , 0                       , 0 , 0 , 0 , 0]                            , 
                           [0 , (3*me2+10*me1)/35      , 0 , 0 , 0 , (7*L*me2+15*L*me1)/420      , 0 , (9*me2+9*me1)/140       , 0 , 0 , 0 , -(6*L*me2+7*L*me1)/420]       , 
                           [0 , 0                      , 0 , 0 , 0 , 0                           , 0 , 0                       , 0 , 0 , 0 , 0]                            , 
                           [0 , 0                      , 0 , 0 , 0 , 0                           , 0 , 0                       , 0 , 0 , 0 , 0]                            , 
                           [0 , 0                      , 0 , 0 , 0 , 0                           , 0 , 0                       , 0 , 0 , 0 , 0]                            , 
                           [0 , (7*L*me2+15*L*me1)/420 , 0 , 0 , 0 , (3*L**2*me2+5*L**2*me1)/840 , 0 , (7*L*me2+6*L*me1)/420   , 0 , 0 , 0 , -(L**2*me2+L**2*me1)/280]     , 
                           [0 , 0                      , 0 , 0 , 0 , 0                           , 0 , 0                       , 0 , 0 , 0 , 0]                            , 
                           [0 , (9*me2+9*me1)/140      , 0 , 0 , 0 , (7*L*me2+6*L*me1)/420       , 0 , (10*me2+3*me1)/35       , 0 , 0 , 0 , -(15*L*me2+7*L*me1)/420]      , 
                           [0 , 0                      , 0 , 0 , 0 , 0                           , 0 , 0                       , 0 , 0 , 0 , 0]                            , 
                           [0 , 0                      , 0 , 0 , 0 , 0                           , 0 , 0                       , 0 , 0 , 0 , 0]                            , 
                           [0 , 0                      , 0 , 0 , 0 , 0                           , 0 , 0                       , 0 , 0 , 0 , 0]                            , 
                           [0 , -(6*L*me2+7*L*me1)/420 , 0 , 0 , 0 , -(L**2*me2+L**2*me1)/280    , 0 , -(15*L*me2+7*L*me1)/420 , 0 , 0 , 0 , (5*L**2*me2+3*L**2*me1)/840]])
        C3[1,2] = np.array([
                            [0 , 0 , 0                      , 0 , 0                            , 0 , 0 , 0 , 0                       , 0 , 0                            , 0]  , 
                            [0 , 0 , (3*me2+10*me1)/35      , 0 , -(7*L*me2+15*L*me1)/420      , 0 , 0 , 0 , (9*me2+9*me1)/140       , 0 , (6*L*me2+7*L*me1)/420        , 0]  , 
                            [0 , 0 , 0                      , 0 , 0                            , 0 , 0 , 0 , 0                       , 0 , 0                            , 0]  , 
                            [0 , 0 , 0                      , 0 , 0                            , 0 , 0 , 0 , 0                       , 0 , 0                            , 0]  , 
                            [0 , 0 , 0                      , 0 , 0                            , 0 , 0 , 0 , 0                       , 0 , 0                            , 0]  , 
                            [0 , 0 , (7*L*me2+15*L*me1)/420 , 0 , -(3*L**2*me2+5*L**2*me1)/840 , 0 , 0 , 0 , (7*L*me2+6*L*me1)/420   , 0 , (L**2*me2+L**2*me1)/280      , 0]  , 
                            [0 , 0 , 0                      , 0 , 0                            , 0 , 0 , 0 , 0                       , 0 , 0                            , 0]  , 
                            [0 , 0 , (9*me2+9*me1)/140      , 0 , -(7*L*me2+6*L*me1)/420       , 0 , 0 , 0 , (10*me2+3*me1)/35       , 0 , (15*L*me2+7*L*me1)/420       , 0]  , 
                            [0 , 0 , 0                      , 0 , 0                            , 0 , 0 , 0 , 0                       , 0 , 0                            , 0]  , 
                            [0 , 0 , 0                      , 0 , 0                            , 0 , 0 , 0 , 0                       , 0 , 0                            , 0]  , 
                            [0 , 0 , 0                      , 0 , 0                            , 0 , 0 , 0 , 0                       , 0 , 0                            , 0]  , 
                            [0 , 0 , -(6*L*me2+7*L*me1)/420 , 0 , (L**2*me2+L**2*me1)/280      , 0 , 0 , 0 , -(15*L*me2+7*L*me1)/420 , 0 , -(5*L**2*me2+3*L**2*me1)/840 , 0]])
        C3[2,0] = np.array([
                           [0                    , 0 , 0 , 0 , 0 , 0 , 0                  , 0 , 0 , 0 , 0 , 0]   , 
                           [0                    , 0 , 0 , 0 , 0 , 0 , 0                  , 0 , 0 , 0 , 0 , 0]   , 
                           [(5*me2+16*me1)/60    , 0 , 0 , 0 , 0 , 0 , (4*me2+5*me1)/60   , 0 , 0 , 0 , 0 , 0]   , 
                           [0                    , 0 , 0 , 0 , 0 , 0 , 0                  , 0 , 0 , 0 , 0 , 0]   , 
                           [- (L*me2+2*L*me1)/60 , 0 , 0 , 0 , 0 , 0 , -(L*me2+L*me1)/60  , 0 , 0 , 0 , 0 , 0]   , 
                           [0                    , 0 , 0 , 0 , 0 , 0 , 0                  , 0 , 0 , 0 , 0 , 0]   , 
                           [0                    , 0 , 0 , 0 , 0 , 0 , 0                  , 0 , 0 , 0 , 0 , 0]   , 
                           [0                    , 0 , 0 , 0 , 0 , 0 , 0                  , 0 , 0 , 0 , 0 , 0]   , 
                           [(5*me2+4*me1)/60     , 0 , 0 , 0 , 0 , 0 , (16*me2+5*me1)/60  , 0 , 0 , 0 , 0 , 0]   , 
                           [0                    , 0 , 0 , 0 , 0 , 0 , 0                  , 0 , 0 , 0 , 0 , 0]   , 
                           [(L*me2+L*me1)/60     , 0 , 0 , 0 , 0 , 0 , (2*L*me2+L*me1)/60 , 0 , 0 , 0 , 0 , 0]   , 
                           [0                    , 0 , 0 , 0 , 0 , 0 , 0                  , 0 , 0 , 0 , 0 , 0]]) 
        C3[2,1] = np.array([
                            [0 , 0                       , 0 , 0 , 0 , 0                            , 0 , 0                      , 0 , 0 , 0 , 0]                            , 
                            [0 , 0                       , 0 , 0 , 0 , 0                            , 0 , 0                      , 0 , 0 , 0 , 0]                            , 
                            [0 , (3*me2+10*me1)/35       , 0 , 0 , 0 , (7*L*me2+15*L*me1)/420       , 0 , (9*me2+9*me1)/140      , 0 , 0 , 0 , -(6*L*me2+7*L*me1)/420]       , 
                            [0 , 0                       , 0 , 0 , 0 , 0                            , 0 , 0                      , 0 , 0 , 0 , 0]                           , 
                            [0 , -(7*L*me2+15*L*me1)/420 , 0 , 0 , 0 , -(3*L**2*me2+5*L**2*me1)/840 , 0 , -(7*L*me2+6*L*me1)/420 , 0 , 0 , 0 , (L**2*me2+L**2*me1)/280]      , 
                            [0 , 0                       , 0 , 0 , 0 , 0                            , 0 , 0                      , 0 , 0 , 0 , 0]                            , 
                            [0 , 0                       , 0 , 0 , 0 , 0                            , 0 , 0                      , 0 , 0 , 0 , 0]                            , 
                            [0 , 0                       , 0 , 0 , 0 , 0                            , 0 , 0                      , 0 , 0 , 0 , 0]                            , 
                            [0 , (9*me2+9*me1)/140       , 0 , 0 , 0 , (7*L*me2+6*L*me1)/420        , 0 , (10*me2+3*me1)/35      , 0 , 0 , 0 , -(15*L*me2+7*L*me1)/420]      , 
                            [0 , 0                       , 0 , 0 , 0 , 0                            , 0 , 0                      , 0 , 0 , 0 , 0]                            , 
                            [0 , (6*L*me2+7*L*me1)/420   , 0 , 0 , 0 , (L**2*me2+L**2*me1)/280      , 0 , (15*L*me2+7*L*me1)/420 , 0 , 0 , 0 , -(5*L**2*me2+3*L**2*me1)/840] , 
                            [0 , 0                       , 0 , 0 , 0 , 0                            , 0 , 0                      , 0 , 0 , 0 , 0]])
        C3[2,2] = np.array([
                            [0 , 0 , 0                       , 0 , 0                           , 0 , 0 , 0 , 0                      , 0 , 0                           , 0]  , 
                            [0 , 0 , 0                       , 0 , 0                           , 0 , 0 , 0 , 0                      , 0 , 0                           , 0]  , 
                            [0 , 0 , (3*me2+10*me1)/35       , 0 , -(7*L*me2+15*L*me1)/420     , 0 , 0 , 0 , (9*me2+9*me1)/140      , 0 , (6*L*me2+7*L*me1)/420       , 0]  , 
                            [0 , 0 , 0                       , 0 , 0                           , 0 , 0 , 0 , 0                      , 0 , 0                           , 0]  , 
                            [0 , 0 , -(7*L*me2+15*L*me1)/420 , 0 , (3*L**2*me2+5*L**2*me1)/840 , 0 , 0 , 0 , -(7*L*me2+6*L*me1)/420 , 0 , -(L**2*me2+L**2*me1)/280    , 0]  , 
                            [0 , 0 , 0                       , 0 , 0                           , 0 , 0 , 0 , 0                      , 0 , 0                           , 0]  , 
                            [0 , 0 , 0                       , 0 , 0                           , 0 , 0 , 0 , 0                      , 0 , 0                           , 0]  , 
                            [0 , 0 , 0                       , 0 , 0                           , 0 , 0 , 0 , 0                      , 0 , 0                           , 0]  , 
                            [0 , 0 , (9*me2+9*me1)/140       , 0 , -(7*L*me2+6*L*me1)/420      , 0 , 0 , 0 , (10*me2+3*me1)/35      , 0 , (15*L*me2+7*L*me1)/420      , 0]  , 
                            [0 , 0 , 0                       , 0 , 0                           , 0 , 0 , 0 , 0                      , 0 , 0                           , 0]  , 
                            [0 , 0 , (6*L*me2+7*L*me1)/420   , 0 , -(L**2*me2+L**2*me1)/280    , 0 , 0 , 0 , (15*L*me2+7*L*me1)/420 , 0 , (5*L**2*me2+3*L**2*me1)/840 , 0]  , 
                            [0 , 0 , 0                       , 0 , 0                           , 0 , 0 , 0 , 0                      , 0 , 0                           , 0]])
        return C3

